<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>